<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>